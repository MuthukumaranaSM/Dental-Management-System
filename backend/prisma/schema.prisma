generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  DENTIST
  PATIENT
  RECEPTIONIST
}
model User {
  id           String        @id @default(uuid())
  email        String        @unique
  password     String
  role         Role          @default(ADMIN) 
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  admin        Admin?        @relation("UserToAdmin")
  dentist      Dentist?      @relation("UserToDentist")
  patient      Patient?      @relation("UserToPatient")
  receptionist Receptionist? @relation("UserToReceptionist")
  tokens       Token[]
}


model Admin {
  id        String   @id @default(uuid())
  userId    String   @unique
  firstName String?
  lastName  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation("UserToAdmin", fields: [userId], references: [id])
}

model Dentist {
  id            String   @id @default(uuid())
  userId        String   @unique
  firstName     String?
  lastName      String?
  licenseNumber String?  @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User     @relation("UserToDentist", fields: [userId], references: [id])
}

model Patient {
  id        String   @id @default(uuid())
  userId    String   @unique
  firstName String?
  lastName  String?
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation("UserToPatient", fields: [userId], references: [id])
}

model Receptionist {
  id         String   @id @default(uuid())
  userId     String   @unique
  firstName  String?
  lastName   String?
  employeeId String?  @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation("UserToReceptionist", fields: [userId], references: [id])
}

model Token {
  id        String   @id @default(uuid())
  token     String   @db.Text
  userId    String
  expiredAt DateTime
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}